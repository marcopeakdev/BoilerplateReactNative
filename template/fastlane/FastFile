default_platform(:ios)


before_all do |lane|
  environment = lane_context[SharedValues::ENVIRONMENT]
  import('HelperFile')
  unless environment.nil?
      puts "Load .env file of #{environment}"
      Dotenv.overload "../" + ENV['ENVFILE']
      ANDROID_BUILD_PATH_DEFAULT = "../android/app/build/outputs/apk/#{ENV['APP_ENV'].downcase}/release/app-#{ENV['APP_ENV'].downcase}-release.apk"
     
      ANDROID_BUILD_FILE_NAME = "#{ENV['APP_DISPLAY_NAME']}-#{ENV['EXPORT_APP_ANDROID_NAME_SUFFIX']}"

      ANDROID_BUILD_PATH_UPLOAD = "android/app/build/outputs/apk/#{ENV['APP_ENV'].downcase}/release/#{ANDROID_BUILD_FILE_NAME}-#{ENV['VERSION_NAME']}.apk"
      
      BUILD_IOS_FILENAME = "#{ENV['APP_DISPLAY_NAME']}-#{ENV['EXPORT_APP_IOS_NAME_SUFFIX']}-#{ENV['APP_ENV']}-#{ENV['VERSION_NAME']}"
  end
end




lane :build_release do |options|
  if options[:isAndroid]
    gradle(task: 'clean', project_dir: 'android/', properties:{"defaultEnvFile" => ENV['ENVFILE']})
    gradle(task: "assemble", build_type: "#{ENV['APP_ENV'].downcase}Release", project_dir: "android/" )
    File.rename(ANDROID_BUILD_PATH_DEFAULT,  "../#{ANDROID_BUILD_PATH_UPLOAD}")

  else
    build_app(
      workspace: "ios/#{ENV['APP_PLACEHOLDER_NAME']}.xcworkspace",
      scheme: "#{ENV['APP_PLACEHOLDER_NAME']}-#{ENV['APP_ENV']}",
      export_method: ENV['EXPORT_METHOD'],
      output_name: "#{BUILD_IOS_FILENAME}.ipa",
      export_options: {
        provisioningProfiles: { 
          "#{ENV['BUNDLE_IDENTIFIER']}" => "#{ENV['RELEASE_PROVISIONING_PROFILE']}"
        }
      }
    )

  end
end


platform :ios do

  desc "IOS build IPA then upload to TestFlight"
  lane :staging_build do |params|
    build_release(isAndroid: false)
    upload_to_testflight({
      itc_provider: ENV['FASTLANE_ITC_PROVIDER'],
      app_identifier: ENV['BUNDLE_IDENTIFIER'],
      username: ENV['FASTLANE_USER']
    })
    notify_testers(
      text: "#{ENV['GOOGLE_CHAT_TAG_USER']} *#{ENV['APP_DISPLAY_NAME']}* has an ios release on TestFlight",
    )
    clean_cache
  end

  desc "iOS clean file cache"
  private_lane :clean_cache do
    File.delete("../#{BUILD_IOS_FILENAME}.ipa") if File.exist?("../#{BUILD_IOS_FILENAME}.ipa")
    File.delete("../#{BUILD_IOS_FILENAME}.app.dSYM.zip") if File.exist?("../#{BUILD_IOS_FILENAME}.app.dSYM.zip")
  end
end

platform :android do 
  desc "Build local apk"
  lane :apk do 
    build_release(isAndroid: true)
  end

  desc "Android build apk and upload"
  lane :staging_build do |params|
    build_release(isAndroid: true)
    upload_to_appcenter(
      app_name: ENV['APP_CENTER_ANDROID_NAME'], 
      file: "#{ANDROID_BUILD_PATH_UPLOAD}",
    )
    notify_testers(
      title: ENV['GOOGLE_CHAT_ANDROID_TITLE'], 
      text: "#{ENV['GOOGLE_CHAT_TAG_USER']} *#{ENV['APP_DISPLAY_NAME']}* has an android release",
      buttonUrl: "#{ENV['GOOGLE_CHAT_BTN_URL']}/#{ENV['APP_CENTER_OWNER_NAME']}/apps/#{ENV['APP_CENTER_ANDROID_NAME']}")
    end
end
